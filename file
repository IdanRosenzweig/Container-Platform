        // unshare
        unshare(
            0
            | CLONE_NEWNS
            );

// make mounts on "/" private
        mount("none", "/", nullptr, MS_REC | MS_PRIVATE, nullptr);

        mount(FS, FS, nullptr, MS_BIND | MS_PRIVATE | MS_REC, nullptr);
        chdir(FS);

#define TEMP_OLD_ROOT "./temp_old_root"

        mkdir(TEMP_OLD_ROOT, 0755);
        syscall(SYS_pivot_root, ".", TEMP_OLD_ROOT);
        chdir("/");

        umount2(TEMP_OLD_ROOT, MNT_DETACH);
        rmdir(TEMP_OLD_ROOT);

        pid_t child_pid = fork();
        if (child_pid == 0) {
            // mount proc
            mkdir("/proc", 0755);
            mount("proc", "/proc", "proc", 0, nullptr);


            // run shell program
            cout << "runnig shell program" << endl;
            const char* shell_path = "/bin/bash";
            execl(shell_path, shell_path, nullptr);

            // shoudn't reach here
            exit(1);
        }

        while (true) {
            int status;
            waitpid(child_pid, &status, 0);
            if (WIFEXITED(status)) break;
        }
        exit(0);